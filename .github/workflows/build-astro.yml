# @format

name: Deploy and Test

on:
    # Trigger the workflow every time you push to the `main` branch
    # Using a different branch name? Replace `main` with your branchâ€™s name
    push:
        branches: [main]
    # Allows you to run this workflow manually from the Actions tab on GitHub.
    workflow_dispatch:

# Allow this job to clone the repo and create a page deployment
permissions:
    contents: write
    pages: write
    id-token: write

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: 20

            - name: Check Licenses
              run: npx license-checker --out ./public/downloads/licenses.csv --csv --onlyAllow "0BSD;BSD-2-Clause;BSD-3-Clause;CC-BY-4.0;ISC;MIT;Apache-2.0;UNLICENSED"

            - name: Astro Build
              uses: withastro/action@v2
              with:
                  package-manager: pnpm@8.7.0

    test:
        timeout-minutes: 20
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: 18

            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 8.7.0
                  run_install: false

            - name: Get pnpm store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - uses: actions/cache@v4
              name: Setup pnpm cache
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install dependencies
              run: pnpm install

            - name: Prepare server
              run: |
                  pnpm build
                  pnpm crawl

            - name: Install Playwright Browsers
              run: |
                  npx playwright install chromium
                  sudo apt-get update
                  sudo apt-get install -y libnss3 libatk-bridge2.0-0 libdrm2 libxcomposite1 libxdamage1 libxrandr2 libgbm1

            - name: Run Playwright tests
              run: npx playwright test

            - name: Publish if version has been updated
              uses: JS-DevTools/npm-publish@v3
              with:
                  token: ${{ secrets.NPM_AUTH_TOKEN }}

    deploy:
        needs:
            - build
            - test
        runs-on: ubuntu-latest
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        steps:
            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v4
