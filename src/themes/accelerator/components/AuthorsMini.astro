---
// warning: This file is overwritten by Astro Accelerator

import { Accelerator } from 'astro-accelerator-utils';
import type { Frontmatter } from 'astro-accelerator-utils/types/Frontmatter';
import { SITE } from '@config';
import { Translations, Lang } from '@util/Languages';
import { getImageInfo } from '@util/custom-markdown.mjs';
import ReadingTime from '@components/ReadingTime.astro';

const accelerator = new Accelerator(SITE);
const stats = new accelerator.statistics(
    'accelerator/components/AuthorsMini.astro'
);
stats.start();

// Properties
type Props = {
    lang: string;
    frontmatter: Frontmatter;
};
const { lang, frontmatter } = Astro.props satisfies Props;

// Language
const _ = Lang(lang);

// Logic
const authorList = accelerator.authors.forPost(frontmatter);
const dateToShow =
    frontmatter.modDate == null ? frontmatter.pubDate : frontmatter.modDate;

// Get image info
const authorImage = authorList?.image?.src
    ? getImageInfo(authorList.image.src, 'author-image', SITE.images.authorSize)
    : null;

stats.stop();
---

{
    authorList.writers.length > 0 && (
        <div class="post-meta mini">
            <div class="author-info">
                {authorImage && (
                    <img
                        srcset={authorImage.srcset}
                        sizes={authorImage.sizes}
                        src={authorImage.src}
                        alt={authorList?.image?.alt}
                        class={authorImage.class}
                        width={authorImage.metadata?.width}
                        height={authorImage.metadata?.height}
                    />
                )}
                {authorList.mainAuthor && (
                    <a
                        href={
                            accelerator.urlFormatter.formatAddress(
                                authorList.mainAuthor.url
                            ) + '1/'
                        }
                        class="author-name">
                        {authorList.mainAuthor.frontmatter.title}
                    </a>
                )}
                {authorList.contributors.map((writer) => (
                    <a
                        href={
                            accelerator.urlFormatter.formatAddress(writer.url) +
                            '1/'
                        }
                        class="contributor-name">
                        {writer.frontmatter.title}
                    </a>
                ))}
                <time
                    class="post-date"
                    datetime={dateToShow.toString()}
                    set:html={accelerator.dateFormatter.formatShortDate(
                        dateToShow,
                        lang
                    )}
                />
                <ReadingTime lang={lang} frontmatter={frontmatter} />
            </div>
        </div>
    )
}
