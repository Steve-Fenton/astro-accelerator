---
// warning: This file is overwritten by Astro Accelerator

import { Accelerator } from 'astro-accelerator-utils';
import type { Frontmatter } from 'astro-accelerator-utils/types/Frontmatter';
import { SITE } from '@config';
import { Translations, Lang } from '@util/Languages';;

const accelerator = new Accelerator(SITE);
const stats = new accelerator.statistics('accelerator/components/AuthorsMini.astro');
stats.start();

// Properties
type Props = {
  lang: string;
  frontmatter: Frontmatter;
};
const { lang, frontmatter } = Astro.props satisfies Props;

// Language
const _ = Lang(lang);

// Logic
const authorList = accelerator.authors.forPost(frontmatter);

stats.stop();
---
{authorList.writers.length > 0 && 
<div class="post-meta">
  <div class="author-info">
    <span>{ _(Translations.post.written_by) + ' ' }
      {authorList.mainAuthor &&
        <span>{ authorList.mainAuthor.frontmatter.title }</span>
      }{authorList.contributors.map((writer) => (
        <span>, </span><span>{ writer.frontmatter.title }</span>
      ))}<br />
      <time datetime={ frontmatter.pubDate.toString() }>
      { accelerator.dateFormatter.formatDate(frontmatter.pubDate, lang) }
      </time>
    </span>
  </div>
</div>
}
<style>
  .post-meta {
    display: flex;
    align-items: top;
}

.author-image {
    width: 80px;
    height: 80px;
    margin-right: 1rem;
    object-fit: cover;
    border-radius: 50%;
    aspect-ratio: 1/1;
    object-fit: cover;
    max-width: 150px;
    float: right;
}


.author-info {
    display: flex;
    align-items: center;
}

time[itemprop='datePublished'] {
    display: inline-block;
}

time[itemprop='dateModified'] {
    font-style: italic;
    display: block;
}
</style>