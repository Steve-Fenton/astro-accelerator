---
// warning: This file is overwritten by Astro Accelerator

import { Accelerator, PostFiltering } from 'astro-accelerator-utils';
import type { Frontmatter } from 'astro-accelerator-utils/types/Frontmatter';
import { getImageInfo } from '@util/custom-markdown.mjs';
import { SITE } from '@config';
import Head from '@components/HtmlHead.astro';
import Header from '@components/Header.astro';
import Footer from '@components/Footer.astro';
import Copyright from '@components/Copyright.astro';
import SkipLinks from '@components/SkipLinks.astro';
import Breadcrumbs from '@components/Breadcrumbs.astro';
import Navigation from '@components/Navigation.astro';
import TableOfContents from '@components/TableOfContents.astro';
import Authors from '@components/Authors.astro';
import Taxonomy from '@components/Taxonomy.astro';
import Related from '@components/Related.astro';

const accelerator = new Accelerator(SITE);
const stats = new accelerator.statistics('accelerator/layouts/Default.astro');
stats.start();

type Props = {
    frontmatter: Frontmatter;
    headings: { depth: number; slug: string; text: string }[];
    breadcrumbs?: { url: string; title: string; ariaCurrent?: string }[] | null;
};
const { frontmatter, headings, breadcrumbs, data } =
    Astro.props satisfies Props;

const lang = frontmatter.lang ?? SITE.default.lang;
const textDirection = frontmatter.dir ?? SITE.default.dir;

// Logic
const metaImage = frontmatter.bannerImage
    ? getImageInfo(frontmatter.bannerImage.src, '', SITE.images.contentSize)
    : null;

const title = await accelerator.markdown.getInlineHtmlFrom(
    frontmatter.title ?? SITE.title
);
const subtitle = frontmatter.subtitle
    ? await accelerator.markdown.getInlineHtmlFrom(frontmatter.subtitle)
    : null;

const site_url = SITE.url;
const site_features = SITE.featureFlags;
const search =
    accelerator.posts.all().filter(PostFiltering.isSearch).shift() ?? null;
const searchUrl = search && accelerator.urlFormatter.formatAddress(search.url);
const isSearchPage =
    accelerator.urlFormatter.formatAddress(Astro.url.pathname) === searchUrl;
const showSearch = !isSearchPage;

stats.stop();
---

<html dir={textDirection} lang={lang} class="initial">
    <Head frontmatter={frontmatter} headings={headings} lang={lang} />
    <body>
        <SkipLinks frontmatter={frontmatter} headings={headings} lang={lang} />
        <Header
            frontmatter={frontmatter}
            headings={headings}
            lang={lang}
            showSearch={showSearch}
        />
        <Breadcrumbs
            frontmatter={frontmatter}
            headings={headings}
            lang={lang}
            breadcrumbs={breadcrumbs}
        />
        <div class="content-group">
            <main id="site-main">
                <article itemscope itemtype="https://schema.org/Article">
                    <header>
                        <h1 itemprop="name headline">
                            <Fragment set:html={title} />
                        </h1>
                        {
                            subtitle && (
                                <p>
                                    <Fragment set:html={subtitle} />
                                </p>
                            )
                        }
                    </header>
                    <div
                        class="page-content anim-show-parent"
                        itemprop="articleBody">
                        <TableOfContents
                            frontmatter={frontmatter}
                            headings={headings}
                            lang={lang}
                        />
                        <slot />
                        <Authors frontmatter={frontmatter} lang={lang} />
                        <Taxonomy frontmatter={frontmatter} lang={lang} />
                        <Related
                            frontmatter={frontmatter}
                            headings={headings}
                            lang={lang}
                        />
                        {
                            metaImage && (
                                <meta
                                    itemprop="image"
                                    content={metaImage.src}
                                />
                            )
                        }
                    </div>
                </article>
            </main>
            <Navigation lang={lang} />
        </div>
        <Footer frontmatter={frontmatter} headings={headings} lang={lang}>
            <Copyright
                frontmatter={frontmatter}
                headings={headings}
                lang={lang}
            />
        </Footer>
        <script define:vars={{ site_url, site_features }}>
            window.site_url = site_url;
            window.site_features = site_features;
        </script>
        <script src={SITE.subfolder + '/js/main.js'} type="module" async
        ></script>
    </body>
</html>
